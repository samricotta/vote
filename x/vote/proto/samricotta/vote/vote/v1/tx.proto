syntax = "proto3";
package samricotta.vote.vote.v1;

option go_package = "github.com/samricotta/vote/x/vote";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "samricotta/vote/vote/v1/types.proto";

// Service Msg defines the RPC methods available for the voting system.
service Msg {
  rpc NewVote(MsgNewVote) returns (MsgNewVoteResponse);
  rpc ResolveVote(MsgResolveVote) returns (ResolveVoteResponse);
}

message MsgNewVote {
  uint64 new_decision_id = 1;
  repeated string options = 2;
}

message MsgNewVoteResponse {
  uint64 vote_id = 1;
}

message MsgResolveVote {
  string winning_option = 1;
  cosmos.base.v1beta1.Coin funds = 2 [(gogoproto.nullable) = false ]; 
}

message ResolveVoteResponse {}