syntax = "proto3";
package samricotta.crs.v1;

option go_package = "github.com/samricotta/crs";

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";


// Params defines the parameters of the module.
message Params {
  uint64 commit_timeout = 1; // in seconds
  uint64 reveal_timeout = 2; // in seconds
}

// GenesisState is the state that must be provided at genesis.
message GenesisState {
    // params defines all the parameters of the module.
    Params params = 1
    [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message Decision {
  cosmos.base.v1beta1.Coin entry_fee = 1 [ (gogoproto.nullable) = false ];

  repeated bytes options = 2;

  google.protobuf.Timestamp commit_timeout = 3 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
  google.protobuf.Timestamp reveal_timeout = 4 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
}

message Commit {
  bytes commit = 1;
}

message Reveal {
  bytes option = 1;
}